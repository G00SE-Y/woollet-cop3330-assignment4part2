@startuml
'https://plantuml.com/class-diagram

class AddItemController {
-TextField itemName
-LocalDate dueDate
-TextField description

+static Stage stage
-Stage AddItemStage

+AddItemController(Stage)

void submitButtonClicked(ActionEvent)
}

class AddListController {
-TextField listName

+static Stage stage
-Stage AddListStage

+AddListController(Stage)

void submitButtonClicked(ActionEvent)
}

class ConfirmDeleteController {
+static Stage stage
-Stage confirmDeleteStage

+confirmDeleteController(Stage)

void confirmButtonClicked(ActionEvent)
void cancelButtonClicked(ActionEvent)
}

class ListCatalogController {
+static Stage stage
-Stage ListCatalogStage

-TableView tableView
-TableColumn nameColumn
-TableColumn sizeColumn

+ListCatalogController(Stage)
+initialize()

void saveListButtonCLicked(ActionEvent)
void saveAllListsButtonClicked(ActionEvent)
void renameButtonClicked(ActionEvent)
void newButtonClicked(ActionEvent)
void deleteButtonClicked(ActionEvent)
void onTableItemDoubleClicked(ActionEvent)
}

class ListOptionsController {
+static Stage stage
-Stage ListOptionsStage

-TextArea listName
-TableView<ToDoItem> table
-TableColumn listNames
-CheckBox completed
-TextArea itemDescription
-TextArea itemDate
-TextArea itemName

+ListOptionsController(Stage)

-void completeBoxChecked(ActionEvent)
-void deleteButtonClicked(ActionEvent)
-void newButtonClicked(ActionEvent)
-void editButtonClicked(ActionEvent)
-void allButtonClicked(ActionEvent)
-void incompleteButtonClicked(ActionEvent)
-void completedButtonClicked(ActionEvent)
-void returnToListsButtonClicked(ActionEvent)
-void itemClicked(ActionEvent)
}

class LoadListsController {
+static Stage stage
-Stage LoadListsStage

-TableView table
-TableColumn checkBoxes
-TableColumn listNames

+LoadListsController(Stage)

-void LoadListsButtonClicked(ActionEvent)
-void loadBoxChecked(ActionEvent)
}

class LoadOptionsController {
+static Stage stage
-Stage LoadOptionsStage

+LoadOptionsController(Stage)

-void loadAllListsButtonClicked(ActionEvent)
-void selectListsToLoadButtonClicked(ActionEvent)
-void memeButtonClicked(ActionEvent)
}

class ToDoItem {
-SimpleStringProperty name
-SimpleStringProperty description
-LocalDate date
-boolean complete

+String getName()
+void setName(String)
+String getDate()
+void setDate(LocalDate)
+String getDesc()
+void setDesc(String)
+String isComplete()
+void setComplete(String)

+ToDoItem(String, String, String)
}

class ToDoList {
-SimpleStringProperty name
-LinkedList<ToDoItem> list
-SimpleStringProperty size

+String getName()
+void setName(String)
+String getSize()
+LinkedList<ToDoItem> getList()

+ToDoList(String)

+void addItem(ToDoItem)
+void removeItem(ToDoItem)
+void editItem(ToDoItem,ToDoItem)
-void updateSize()
}

class Catalog {
-LinkedList<String> allListNames
-LinkedList<ToDoList> catalog
-int numberOfLists

+void addList(String)
+void removeList(String)
+void editListName(String, String)

+LinkedList<String> getCatalog()
-void updateSize()
+void LoadLists(ArrayList<String>)
+void addList(ToDoList)
+void deleteList(ToDoList)
+void editList(String,String)

+Catalog()
}

class ToDoApp {
+launch()
}

class DataStorage {
-File storageFolder

+DataStorage(File)

+void saveToMemory(ToDoList)
+void saveToMemory(Catalog)

+Catalog Catalog loadLists()
Catalog loadLists(LinkedList<String> listNames)
+LinkedList<String> loadListNames()
}

class FileHandler {
-getDirectory()
+static BufferedReader getReader(String)
+static FileWriter getWriter(String)
}

Catalog *-- ToDoList
ToDoList *-- ToDoItem

note "File Utility Classes" as n1
n1 . DataStorage
n1 .. FileHandler

note "Action Event Controllers" as n2
n2 .-. AddItemController
n2 .. AddListController
n2 .-. ConfirmDeleteController
n2 . ListCatalogController
n2 .-. ListOptionsController
n2 .. LoadListsController
n2 .-. LoadOptionsController

@enduml